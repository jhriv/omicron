---

- name: Install Omicron
  hosts: omicron-app

  roles:
    - name: uclalib_role_postgresql

  tasks:
    - name: Disable SELinux
      selinux:
        state: disabled
      become: true

    - name: Install EPEL
      package:
        name: 'epel-release'
        state: present
      become: true

    - name: Install Initial Packages
      package:
        name: '{{ packages }}'
        state: present
      become: true

    - name: Create dedicated app group
      group:
        name: '{{ groupname | default (username) }}'
        state: present
      become: true

    - name: Create dedicted app user
      user:
        name: '{{ username }}'
        group: '{{ groupname | default (username) }}'
        groups: 'nginx'
        comment: 'Omicron'
        state: present
      become: true


    - name: Create application directory
      file:
        name: '{{ application_dir | default ("/opt/omicron") }}'
        state: directory
        owner: '{{ username }}'
        group: '{{ groupname | default (username) }}'
      become: true

    - name: Clone Omicron respository
      git:
        dest: '{{ application_dir | default ("/opt/omicron") }}'
        repo: 'git@github.com:UCLALibrary/omicron.git'
      become: true
      become_user: '{{ username }}'
      when: git

    - name: Copy Omicron repository
      synchronize:
        src: 'omicron'
        dest: '{{ application_dir | default ("/opt/omicron") }}'
        use_ssh_args: true
        owner: false
        group: false
      become: true
      become_user: '{{ username }}'
      when: not git

    - name: Fix ownership of copied repository
      file:
        path: '{{ application_dir | default ("/opt/omicron") }}'
        owner: '{{ username }}'
        group: '{{ groupname | default (username) }}'
        recurse: true
      become: true

    - name: Create Python Virtualenv
      pip:
        virtualenv: 'omicron-venv'
        chdir: '{{ application_dir | default ("/opt/omicron") }}'
        requirements: 'omicron/omicron/requirements.txt'
        virtualenv_command: 'virtualenv-3'
      become: true
      become_user: '{{ username }}'

    - name: Install settings.py
      template:
        dest: '{{ application_dir | default ("/opt/omicron") }}/omicron/omicron/omicron/{{ item }}'
        src: '{{ item }}.j2'
        owner: '{{ username }}'
        group: '{{ groupname | default (username) }}'
      become: true
      become_user: '{{ username }}'
      loop:
        - settings.py

    - name: Migrate database
      command:
        cmd: python ./manage.py migrate
        chdir: '{{ application_dir | default ("/opt/omicron") }}/omicron/omicron'
          # don't need to specify chdir if full path to manage.py is used
      environment:
        PATH: '{{ application_dir | default ("/opt/omicron") }}/omicron-venv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin'
      register: db_migrate
      changed_when: '"No migrations to apply." not in db_migrate.stdout'

    - name: Create application useruser
      command:
        cmd: >
          python ./manage.py createsuperuser
            --noinput
            --username '{{ omicron_superuser_name }}'
            --email '{{ omicron_superuser_email }}'
        chdir: '{{ application_dir | default ("/opt/omicron") }}/omicron/omicron'
          # don't need to specify chdir if full path to manage.py is used
      environment:
        PATH: '{{ application_dir | default ("/opt/omicron") }}/omicron-venv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin'
        DJANGO_SUPERUSER_PASSWORD: '{{ omicron_superuser_password }}'
      register: superuser_create
      failed_when:
        - superuser_create.rc != 0
        - '"That username is already taken." not in superuser_create.stderr'
      changed_when: '"Superuser created successfully." in superuser_create.stdout'

    - name: Configure nginx for Omicron
      template:
        dest: '/etc/{{ item }}'
        src: '{{ item }}.j2'
      become: true
      loop:
        - nginx/conf.d/omicron_socket.conf
        - nginx/default.d/omicron.conf

    - name: Create Omicron Daphne systemd service
      template:
        dest: /etc/systemd/system/{{ item }}
        src: '{{ item }}.j2'
      become: true
      loop:
        - omicron.service

    - name: Enable and start Omicron services
      service:
        name: '{{ item }}'
        enabled: true
        state: started
      become: true
      loop:
        - omicron
        - nginx
